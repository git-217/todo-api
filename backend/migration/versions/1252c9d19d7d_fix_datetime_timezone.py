"""fix_datetime_timezone

Revision ID: 1252c9d19d7d
Revises: 0df9ad67bc5d
Create Date: 2025-09-18 21:12:00.724424

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1252c9d19d7d"
down_revision: Union[str, Sequence[str], None] = "0df9ad67bc5d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("books", sa.Column("author_id", sa.Integer(), nullable=False))
    op.alter_column(
        "books",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "books",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.drop_constraint(op.f("books_user_id_fkey"), "books", type_="foreignkey")
    op.create_foreign_key(None, "books", "users", ["author_id"], ["id"])
    op.drop_column("books", "user_id")
    op.alter_column(
        "notes",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "notes",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "notes",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "notes",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.add_column(
        "books", sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "books", type_="foreignkey")
    op.create_foreign_key(
        op.f("books_user_id_fkey"), "books", "users", ["user_id"], ["id"]
    )
    op.alter_column(
        "books",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.alter_column(
        "books",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("timezone('utc'::text, now())"),
    )
    op.drop_column("books", "author_id")
    # ### end Alembic commands ###
